/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$facebook-name: 'facebook';
$facebook-x: 100px;
$facebook-y: 0px;
$facebook-offset-x: -100px;
$facebook-offset-y: 0px;
$facebook-width: 45px;
$facebook-height: 45px;
$facebook-total-width: 145px;
$facebook-total-height: 112px;
$facebook-image: '../images/sprite.png';
$facebook: 100px 0px -100px 0px 45px 45px 145px 112px '../images/sprite.png' 'facebook';
$github-name: 'github';
$github-x: 0px;
$github-y: 67px;
$github-offset-x: 0px;
$github-offset-y: -67px;
$github-width: 45px;
$github-height: 45px;
$github-total-width: 145px;
$github-total-height: 112px;
$github-image: '../images/sprite.png';
$github: 0px 67px 0px -67px 45px 45px 145px 112px '../images/sprite.png' 'github';
$twitter-name: 'twitter';
$twitter-x: 45px;
$twitter-y: 67px;
$twitter-offset-x: -45px;
$twitter-offset-y: -67px;
$twitter-width: 45px;
$twitter-height: 45px;
$twitter-total-width: 145px;
$twitter-total-height: 112px;
$twitter-image: '../images/sprite.png';
$twitter: 45px 67px -45px -67px 45px 45px 145px 112px '../images/sprite.png' 'twitter';
$yotube-name: 'yotube';
$yotube-x: 0px;
$yotube-y: 0px;
$yotube-offset-x: 0px;
$yotube-offset-y: 0px;
$yotube-width: 100px;
$yotube-height: 67px;
$yotube-total-width: 145px;
$yotube-total-height: 112px;
$yotube-image: '../images/sprite.png';
$yotube: 0px 0px 0px 0px 100px 67px 145px 112px '../images/sprite.png' 'yotube';
$scss-width: 145px;
$scss-height: 112px;
$scss-image: '../images/sprite.png';
$scss-sprites: $facebook $github $twitter $yotube;
$scss: 145px 112px '../images/sprite.png' $scss-sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
